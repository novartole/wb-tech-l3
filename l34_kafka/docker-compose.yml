version: "3"

services:
  web-app:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - WBTECH_L34_IP=$WBTECH_L34_IP
      - WBTECH_L34_PORT=$WBTECH_L34_PORT
      - WBTECH_L34_DB_PARAMS=postgresql://$WBTECH_L34_PG_USER:$WBTECH_L34_PG_PASSWORD@postgres/$WBTECH_L34_PG_DB
      - WBTECH_L34_BUS_PARAMS=kafka:9092

      - RUST_LOG=trace
    ports:
      - 3001:$WBTECH_L34_PORT

  postgres:
    image: postgres
    restart: always
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=$WBTECH_L34_PG_DB
      - POSTGRES_USER=$WBTECH_L34_PG_USER
      # fine for testing
      - POSTGRES_PASSWORD=$WBTECH_L34_PG_PASSWORD
    ports:
      - 5432:5432
    volumes:
      - ./init-db/postgres/:/docker-entrypoint-initdb.d/
      - wbtech-l34-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "--quiet" ]
      interval: 1s
      timeout: 5s
      retries: 10

  kafka:
    image: bitnami/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  wbtech-l34-data:
